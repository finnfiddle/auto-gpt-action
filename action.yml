name: Auto-GPT-Action
description: A GitHub Action that uses runs Auto-GPT to follow instructions in the issue description.
author: Finn Fitzsimons

# branding:
#   color: '${{ github.action.color }}'
#   icon: '${{ github.action.icon }}'

inputs:
  # openai_key:
  #   description: The OpenAI API key.
  #   required: true
  #   type: string
  issue_body:
    description: The body of the issue.
    required: true
    type: string
  issue_number:
    description: The number of the issue.
    required: true
    type: string
  repository:
    description: The owner and repository name. For example, octocat/Hello-World.
    required: true
    type: string
  ref_name:
    description: The short ref name of the branch or tag that triggered the workflow run. This value matches the branch or tag name shown on GitHub. For example, feature-branch-1.
    required: true
    type: string
  ai_role:
    description: The role of the AI.
    type: string
    default: I want you to act as a software developer who is willing to review the issue described and commit appropriate fixes on a feature branch. When files are mentioned in the goals you will check to see if they exist, and modify them as necessary instead of creating new files. You will run the tests and iterate until all tests pass and then you will exit.  

outputs:
  commit_message:
    description: 'The commit message generated by Auto-GPT.'
  comment_message:
    description: 'The comment message generated by Auto-GPT-Action.'

runs:
  using: "composite"
  steps:
    - name: Checkout autogpt
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
        repository: Significant-Gravitas/AutoGPT

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Poetry
      shell: bash
      working-directory: ./autogpts/autogpt/
      run: |
        curl -sSL https://install.python-poetry.org | python -
        poetry export -f requirements.txt -o requirements.txt --without-hashes
        pip install -r requirements.txt
        poetry update python-dotenv
        pip install auto_gpt_plugin_template

    # - name: Setup instructions
    #   shell: bash
    #   working-directory: ./autogpts/autogpt/
    #   run: |
    #     touch prompt_settings.yaml
    #     printf "ai_name: autodev\nai_role: I want you to act as a software developer.\nai_goals:\n  - ${{ inputs.issue_body }}" > prompt_settings.yaml

    - name: Checkout service repository
      uses: actions/checkout@v3
      with:
        path: ./autogpts/autogpt/workspace
        fetch-depth: 0
        submodules: true
        repository: ${{ inputs.repository }}

    - name: Create and checkout new branch
      run: |
        git checkout ${{ inputs.ref_name }}
        git checkout -b autodev/${{ inputs.issue_number }}

    # - name: Install plugins
    #   shell: bash
    #   working-directory: ./autogpts/autogpt/
    #   run: |
    #     curl -L -o ./plugins/Auto-GPT-Plugins.zip https://github.com/Significant-Gravitas/Auto-GPT-Plugins/archive/refs/heads/master.zip

    - name: Run agent
      shell: bash
      working-directory: ./autogpts/autogpt/
      run: |
        ./autogpt.sh run --continuous --gpt4only --skip-news --skip-reprompt --ai-goal "${{ inputs.issue_body }}" --ai-name "auto-dev" --ai-role "I want you to act as a software developer."
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
        AGENT_NAME: autogpt
        # HELICONE_API_KEY: ${{ secrets.HELICONE_API_KEY }}
        # REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        # HELICONE_CACHE_ENABLED: false
        # HELICONE_PROPERTY_AGENT: autogpt
        # REPORT_LOCATION: ${{ format('../../reports/{0}', matrix.agent-name) }}

    - name: Commit changes
      run: |
        git config --global user.email 'github-actions@github.com'
        git config --global user.name 'Auto-GPT and GitHub Actions'
        git add -A
        git commit -m "Autodev: resolve issue #${{ inputs.issue_number }}"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.AUTODEV_GITHUB_TOKEN }}
        branch: autodev/${{ inputs.issue_number }}

    # - name: Update issue
    #   uses: peter-evans/create-or-update-comment@v1
    #   with:
    #     issue-number: ${{ github.event.issue.number }}
    #     body: ${{ steps.run-autodev.outputs.comment_message }}