name: Auto-GPT-Action
description: A GitHub Action that uses runs Auto-GPT to follow instructions in the issue description.
author: Finn Fitzsimons

# branding:
#   color: '${{ github.action.color }}'
#   icon: '${{ github.action.icon }}'

inputs:
  openai_key:
    description: The OpenAI API key.
    required: true
    type: string
  github_token:
    description: Github API key.
    required: true
    type: string
  issue_body:
    description: The body of the issue.
    required: true
    type: string
    default: Create a new readme file in the repository root explaining quantum computing basics. # TODO remove
  issue_number:
    description: The number of the issue.
    required: true
    type: string
    default: "1" # TODO remove
  repository:
    description: The owner and repository name. For example, octocat/Hello-World.
    required: true
    type: string
  repository_name:
    description: The repository name. For example, Hello-World.
    required: true
    type: string
  project_description:
    description: Description of the service repository, its structure, technologies used, and what it does.
    required: true
    type: string
  ref_name:
    description: The short ref name of the branch or tag that triggered the workflow run. This value matches the branch or tag name shown on GitHub. For example, feature-branch-1.
    required: true
    type: string
  ai_role:
    description: The role of the AI.
    type: string
    default: I want you to act as a software developer who is willing to review the issue described and commit appropriate fixes on a feature branch. When files are mentioned in the goals you will check to see if they exist, and modify them as necessary instead of creating new files. You will run the tests and iterate until all tests pass and then you will exit.  

outputs:
  commit_message:
    description: 'The commit message generated by Auto-GPT.'
  comment_message:
    description: 'The comment message generated by Auto-GPT-Action.'

runs:
  using: "composite"
  steps:

    - name: Checkout autodev
      uses: actions/checkout@v3
      with:
        repository: printify/autodev
        ref: finn2

    - name: Setup instructions
      shell: bash
      working-directory: ./
      run: |
        touch ai_settings.yaml
        printf "\nai_name: Autodev\nai_role: I want you to act as a software engineer.\nai_goals:\n- Inside the data directory there is a GIT software repository cloned from `${{ inputs.repository }}` which is a `${{ inputs.project_description }}`. Your task is to do the following: `${{ inputs.issue_body }}`. All changes should be covered with tests and all tests should pass. You should modify existing files where possible before creating new ones. Try to follow existing patterns within the codebase." > ai_settings.yaml

    - name: Setup env
      shell: bash
      working-directory: ./
      run: |
        touch .env
        printf "OPENAI_API_KEY=${{ inputs.openai_key }}" > .env

    # - name: Checkout service repository
    #   uses: actions/checkout@v3
    #   with:
    #     path: ./data
    #     fetch-depth: 0
    #     submodules: true
    #     repository: ${{ inputs.repository }}
    #     ref: ${{ inputs.ref_name }}

    - name: Checkout External Repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        token: ${{ inputs.autodev_github_token }}
        path: data

    # - name: Create data directory
    #   shell: bash
    #   working-directory: .
    #   run: |
    #     mkdir data

    # - name: Create and checkout new branch
    #   shell: bash
    #   working-directory: ./data
    #   run: |
    #     git clone -b ${{ inputs.ref_name }} ${{ inputs.repository }}
    #     git checkout -b autodev/${{ inputs.issue_number }}

    # - name: Install plugins
    #   shell: bash
    #   working-directory: ./autogpts/autogpt/
    #   run: |
    #     curl -L -o ./plugins/Auto-GPT-Plugins.zip https://github.com/Significant-Gravitas/Auto-GPT-Plugins/archive/refs/heads/master.zip

    - name: Run AutoGPT
      shell: bash
      working-directory: ./
      run: |
        ls
        docker pull significantgravitas/auto-gpt
        docker compose run --rm auto-gpt --continuous --ai-settings ./ai_settings.yaml

    - name: Commit changes
      shell: bash
      working-directory: ./autogpts/autogpt/workspace/${inputs.repository_name}
      run: |
        git config --global user.email 'github-actions@github.com'
        git config --global user.name 'Autodev'
        git add -A
        git commit -m "Autodev: resolve issue #${{ inputs.issue_number }}"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.autodev_github_token }}
        branch: autodev/${{ inputs.issue_number }}

    # - name: Update issue
    #   uses: peter-evans/create-or-update-comment@v1
    #   with:
    #     issue-number: ${{ github.event.issue.number }}
    #     body: ${{ steps.run-autodev.outputs.comment_message }}